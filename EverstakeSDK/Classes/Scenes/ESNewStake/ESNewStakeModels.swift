//
//  ESNewStakeModels.swift
//  Pods
//
//  Created by Alexander Koziaruk on 04.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ESNewStake {
  
    struct ViewModel {
        
        let apr: String!
        let symbol: String!
        let balance: Double!
        let precision: Int!
        
        let coin: ESSharedModel.Coin!

        var perYear: Double!
        var perMonth: Double!
        var perDay: Double!

        var validators: String!
        var isReliable: Bool!

        init(model: ESSharedModel.Combined,
             selectedValidators: [ESSharedModel.Coin.Validator]) {
            apr = (model.coin.apr ?? "0") + "%"
            symbol = model.coin.symbol ?? ""
            balance = model.stake?.amount ?? 0 // TODO: Use balance from SDK interface
            precision = Int(model.coin.precision ?? "5")
            coin = model.coin
            perYear = 0
            perMonth = 0
            perDay = 0
            amountToStake = 0
            validators = selectedValidators.map({ ($0.name ?? "")} ).joined(separator: ", ")
            isReliable = selectedValidators.contains(where: { $0.isReliable ?? true }) //allSatisfy({ ($0.isReliable ?? true) })
        }

        var amountToStake: Double {
            didSet {
                let calculation = ESCalculatorHelper.getCalculations(model: coin, amount: amountToStake)
                perYear = calculation.perYear
                perMonth = calculation.perMonth
                perDay = calculation.perDay
            }
        }
        
        var displayBalance: String {
            return format(amount: balance)
        }
        
        var displayPerYearAmount: String {
            return format(amount: perYear)
        }
        
        var displayPerMonthAmount: String {
            return format(amount: perMonth)
        }
        
        var displayPerDayAmount: String {
            return format(amount: perDay)
        }
        
        private func format(amount: Double?) -> String {
            if let amount = amount,
               let symbol = symbol {
                return amount.clean + " " + symbol
            } else {
                return ""
            }
        }
    }

}

