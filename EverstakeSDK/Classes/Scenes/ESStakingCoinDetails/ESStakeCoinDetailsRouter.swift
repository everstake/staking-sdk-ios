//
//  ESStakeCoinDetailsRouter.swift
//  Pods
//
//  Created by Alex Koziaruk on 29.10.2020.
//  Copyright (c) 2020 Noisy Miner. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ESStakeCoinDetailsRoutingLogic {
    func stakePressed()
    func openCalculator()
    func routeToNewUnstakeWith(_ validator: ESStakeCoinDetails.ViewModel.ValidatorStake)
    func claim()
    func back()
    func showInfo()
}

protocol ESStakeCoinDetailsDataPassing {
    var dataStore: ESStakeCoinDetailsDataStore? { get }
}

class ESStakeCoinDetailsRouter: NSObject, ESStakeCoinDetailsRoutingLogic, ESStakeCoinDetailsDataPassing {
    
    weak var viewController: ESStakeCoinDetailsViewController?
    var dataStore: ESStakeCoinDetailsDataStore?

    // MARK: Routing

    func stakePressed()  {
        guard let model = dataStore?.model else { return }

        if model.stake != nil && model.coin.stakeType == .oneToMany {
            viewController?.presentAlertWith(title: "Stake", message: "Please unstake your funds first.")
        } else {
            routeToNewStakeWith(model)
        }
    }
    
    func routeToNewStakeWith(_ model: ESServerModel.Combined) {
        let newStakeViewController = ESNewStakeConfigurator.viewControllerWith(model: model)
        viewController?.navigationController?.pushViewController(newStakeViewController,
                                                                 animated: true)
    }
    
    func routeToNewUnstakeWith(_ model: ESStakeCoinDetails.ViewModel.ValidatorStake) {
        let newUnstakeViewController = ESNewUnstakeConfigurator.viewControllerWith(model: model)
        viewController?.navigationController?.pushViewController(newUnstakeViewController,
                                                                 animated: true)
    }
    
    func claim() {
        guard let model = dataStore?.model else { return }
        EverstakeSDK.shared.onAction?(.claim, model.coin.symbol ?? "", nil, [ESValidatorInfo(name: "", address: "")])
    }
    
    func openCalculator() {
        guard let model = dataStore?.model else { return }
        let calculatorViewController = ESCalculatorConfigurator.viewControllerWith(model)
        viewController?.navigationController?.pushViewController(calculatorViewController,
                                                                 animated: true)
    }
    
    func back() {
        viewController?.navigationController?.popViewController(animated: true)
    }
    
    func showInfo() {
        if let link = URL(string: "https://everstake.one/") {
            UIApplication.shared.open(link)
        }
    }
    
}

